{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh shukla\\\\share_files\\\\share_files\\\\client\\\\src\\\\components\\\\OtherFileShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtherFileShare = () => {\n  _s();\n  const [fileUrl, setFileUrl] = useState(''); // State to store the uploaded file URL\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the default form submission behavior\n\n    const formData = new FormData(); // Create a FormData object to hold the file\n    const fileInput = document.querySelector('input[type=\"file\"]'); // Select the file input\n\n    if (fileInput.files.length === 0) {\n      alert('Please select a file to upload.');\n      return;\n    }\n    formData.append('file', fileInput.files[0]); // Append the selected file to FormData\n\n    try {\n      // Make the POST request to upload the file\n      const response = await axios.post('http://192.168.1.105:5000/api/files/other', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Set the content type for file upload\n        }\n      });\n      console.log('File uploaded successfully:', response.data); // Log the success message\n\n      // Construct the URL to access the file\n      const fileUrl = `http://192.168.1.105:5000/uploads/${response.data.fileName}`;\n      setFileUrl(fileUrl); // Set the file URL to display\n    } catch (error) {\n      console.error('Error uploading file:', error.response ? error.response.data : error.message); // Log any errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), fileUrl &&\n    /*#__PURE__*/\n    // If fileUrl is set, display the link to the uploaded file\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File uploaded successfully! Access it \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: fileUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 52\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(OtherFileShare, \"wVAs1uu2398xrGl4+IfXWMCiyXU=\");\n_c = OtherFileShare;\nexport default OtherFileShare;\nvar _c;\n$RefreshReg$(_c, \"OtherFileShare\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OtherFileShare","_s","fileUrl","setFileUrl","handleSubmit","event","preventDefault","formData","FormData","fileInput","document","querySelector","files","length","alert","append","response","post","headers","console","log","data","fileName","error","message","children","onSubmit","type","name","required","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/Adarsh shukla/share_files/share_files/client/src/components/OtherFileShare.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OtherFileShare = () => {\r\n  const [fileUrl, setFileUrl] = useState(''); // State to store the uploaded file URL\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevent the default form submission behavior\r\n\r\n    const formData = new FormData(); // Create a FormData object to hold the file\r\n    const fileInput = document.querySelector('input[type=\"file\"]'); // Select the file input\r\n\r\n    if (fileInput.files.length === 0) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    formData.append('file', fileInput.files[0]); // Append the selected file to FormData\r\n\r\n    try {\r\n      // Make the POST request to upload the file\r\n      const response = await axios.post('http://192.168.1.105:5000/api/files/other', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data' // Set the content type for file upload\r\n        }\r\n      });\r\n\r\n      console.log('File uploaded successfully:', response.data); // Log the success message\r\n\r\n      // Construct the URL to access the file\r\n      const fileUrl = `http://192.168.1.105:5000/uploads/${response.data.fileName}`;\r\n      setFileUrl(fileUrl); // Set the file URL to display\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error.response ? error.response.data : error.message); // Log any errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" name=\"file\" required /> {/* Input for file selection, required */}\r\n        <button type=\"submit\">Upload File</button> {/* Submit button */}\r\n      </form>\r\n      {fileUrl && ( // If fileUrl is set, display the link to the uploaded file\r\n        <div>\r\n          <p>File uploaded successfully! Access it <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherFileShare;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;;IAEhE,IAAIF,SAAS,CAACG,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAChCC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEAP,QAAQ,CAACQ,MAAM,CAAC,MAAM,EAAEN,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE7C,IAAI;MACF;MACA,MAAMI,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,2CAA2C,EAAEV,QAAQ,EAAE;QACvFW,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB,CAAC;QACxC;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;;MAE3D;MACA,MAAMnB,OAAO,GAAG,qCAAqCc,QAAQ,CAACK,IAAI,CAACC,QAAQ,EAAE;MAC7EnB,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,CAACK,IAAI,GAAGE,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;IAChG;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAM2B,QAAQ,EAAEtB,YAAa;MAAAqB,QAAA,gBAC3B1B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eAC3CjC,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAW;QAAAH,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAV,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACN9B,OAAO;IAAA;IAAM;IACZH,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAA0B,QAAA,GAAG,wCAAsC,eAAA1B,OAAA;UAAGkC,IAAI,EAAE/B,OAAQ;UAACgC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAV,QAAA,EAAC;QAAI;UAAAH,QAAA,EAAAQ,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC;MAAA;QAAAV,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAV,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/G,CACN;EAAA;IAAAV,QAAA,EAAAQ,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA/CID,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}